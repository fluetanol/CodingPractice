// 문제번호 : 9095번
// 1,2,3더하기
// 푼 시간 : 시간초과
// 알고리즘 분류 : DP

#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    int t;
    cin >> t;
    vector<int> v(11);
    v[1] = 1;
    v[2] = 2;
    v[3] = 4;

    for (int i = 4; i < v.size(); i++)
    {
        v[i] = v[i - 1] + v[i - 2] + v[i - 3];
    }

    for (int i = 0; i < t; i++)
    {
        int k;
        cin >> k;
        cout << v[k] << endl;
    }
}


/*
    규칙성을 못찾으면 어렵고 찾으면 개같이 쉬운 문제
    초항 1,2,3의 케이스는 자명하니 배열에 초기화를 시켜두고 (v[1]=1, v[2]=2, v[3]=4)
     4부터의 덧셈 조합을 따져보면

    1+3
    2+2
    3+1

    이렇게 있을 것이다. 위 조합을 잘 생각해보면

    1+3 은 1+로 시작할때 가능한 3의 모든 조합
    2+2 는 2+로 시작할때 가능한 2의 모든 조합
    ...
    이렇게 생각해볼 수 있는데, 앞서 3의 모든 조합은 v[3]에 저장해뒀으니 v[3], 
    2의 모든 조합은 v[2].... 
    따라서 v[4] = v[3]+v[2]+v[1]이 된다는 것을 알 수 있다.
    
    진짜 똑똑한 놈은 여기에서 눈치까고 문제를 바로 풀지만
    나같은 바보는 이런 규칙성을 찾지를 못해서 삽질하다 시간초과당했다.


    참고로 5의 경우도 봐보자
    
    1+4
    2+3
    3+2
    
    1+4는 1+로 시작할때 가능한 4의 모든 조합
    2+3은 2+로 시작할때 가능한 3의 모든 조합
    3+2는 3+로 시작할때 가능한 2의 모든 조합

    4+1을 넣지 않은 이유는, 이 문제는 1,2,3으로만 이루어진 덧셈 조합을 따지는 조건 때문에,
    4+로 시작하는 덧셈이 존재할 수 없기 때문이다.

    아무튼 결국 v[5] = v[4]+v[3]+v[2]가 된다.

*/